{
  "address": "0x9Df51003C87d80D11EbD84B22FeF6b00Bdb49b93",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ethUsdPriceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWitdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x25095bc95c83066c89ad2ec1a7d4df2a0a2a8ddba130d180b5e13091fe24b2f0",
  "receipt": {
    "to": null,
    "from": "0xc476FdED4f4471c6AEE6c64e9E7e7439Eca79198",
    "contractAddress": "0x9Df51003C87d80D11EbD84B22FeF6b00Bdb49b93",
    "transactionIndex": 59,
    "gasUsed": "998719",
    "logsBloom": "0x
    "blockHash": "0xe56de5abfc41da5624312805c48a9821a520049908cb0dec00cb96c9a411c43e",
    "transactionHash": "0x25095bc95c83066c89ad2ec1a7d4df2a0a2a8ddba130d180b5e13091fe24b2f0",
    "logs": [],
    "blockNumber": 7496043,
    "cumulativeGasUsed": "20805199",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419"
  ],
  "numDeployments": 2,
  "solcInputHash": "a03f3f6fba75b335dce759be23c482af",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ethUsdPriceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWitdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    constructor(address ethUsdPriceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(ethUsdPriceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWitdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xdaa402bf6646fa1b3cf6cccb80e9b25ed2e9ceecefed53e3e7d7e3f282ed23eb\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface ethUsdPriceFeedAddress)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = ethUsdPriceFeedAddress.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface ethUsdPriceFeedAddress\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(ethUsdPriceFeedAddress);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x02991f2c7255fd2d7ae376fc20b3851c1d31fef91070b1425c0cdfab5ab9b1e9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200123238038062001232833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110b36200017f6000396000818161019b0152818161041d01526107e301526110b36000f3fe60806040526004361061007b5760003560e01c806354861af71161004e57806354861af7146100fc5780636b69a59214610139578063b60d428814610164578063dba6335f1461016e5761007b565b80630c967d27146100805780630ec3b0271461008a5780631bf6132d146100b55780633ccfd60b146100f2575b600080fd5b610088610199565b005b34801561009657600080fd5b5061009f6103dd565b6040516100ac9190610a07565b60405180910390f35b3480156100c157600080fd5b506100dc60048036038101906100d79190610a65565b610403565b6040516100e99190610aab565b60405180910390f35b6100fa61041b565b005b34801561010857600080fd5b50610123600480360381019061011e9190610af2565b61065b565b6040516101309190610b2e565b60405180910390f35b34801561014557600080fd5b5061014e61069a565b60405161015b9190610aab565b60405180910390f35b61016c6106a7565b005b34801561017a57600080fd5b506101836107e1565b6040516101909190610b2e565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156102a257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610258575b5050505050905060005b815181101561032c5760008282815181106102ca576102c9610b49565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032490610ba7565b9150506102ac565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035390610c21565b60006040518083038185875af1925050503d8060008114610390576040519150601f19603f3d011682016040523d82523d6000602084013e610395565b606091505b50509050806103d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d090610c93565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561054b576000600182815481106104c6576104c5610b49565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061054390610ba7565b9150506104a3565b50600067ffffffffffffffff81111561056757610566610cb3565b5b6040519080825280602002602001820160405280156105955781602001602082028036833780820191505090505b50600190805190602001906105ab9291906108e1565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105d290610c21565b60006040518083038185875af1925050503d806000811461060f576040519150601f19603f3d011682016040523d82523d6000602084013e610614565b606091505b5050905080610658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90610c93565b60405180910390fd5b50565b6001818154811061066b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6802b5e3af16b18800006106e6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461080590919063ffffffff16565b1015610727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071e90610d2e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107759190610d4e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061081183610841565b90506000670de0b6b3a7640000858361082a9190610da4565b6108349190610e2d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561088a57600080fd5b505afa15801561089e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c29190610eeb565b5050509150506402540be400816108d99190610f66565b915050919050565b82805482825590600052602060002090810192821561095a579160200282015b828111156109595782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610901565b5b509050610967919061096b565b5090565b5b8082111561098457600081600090555060010161096c565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109cd6109c86109c384610988565b6109a8565b610988565b9050919050565b60006109df826109b2565b9050919050565b60006109f1826109d4565b9050919050565b610a01816109e6565b82525050565b6000602082019050610a1c60008301846109f8565b92915050565b600080fd5b6000610a3282610988565b9050919050565b610a4281610a27565b8114610a4d57600080fd5b50565b600081359050610a5f81610a39565b92915050565b600060208284031215610a7b57610a7a610a22565b5b6000610a8984828501610a50565b91505092915050565b6000819050919050565b610aa581610a92565b82525050565b6000602082019050610ac06000830184610a9c565b92915050565b610acf81610a92565b8114610ada57600080fd5b50565b600081359050610aec81610ac6565b92915050565b600060208284031215610b0857610b07610a22565b5b6000610b1684828501610add565b91505092915050565b610b2881610a27565b82525050565b6000602082019050610b436000830184610b1f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bb282610a92565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610be557610be4610b78565b5b600182019050919050565b600081905092915050565b50565b6000610c0b600083610bf0565b9150610c1682610bfb565b600082019050919050565b6000610c2c82610bfe565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c7d600b83610c36565b9150610c8882610c47565b602082019050919050565b60006020820190508181036000830152610cac81610c70565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d18601b83610c36565b9150610d2382610ce2565b602082019050919050565b60006020820190508181036000830152610d4781610d0b565b9050919050565b6000610d5982610a92565b9150610d6483610a92565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9957610d98610b78565b5b828201905092915050565b6000610daf82610a92565b9150610dba83610a92565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610df357610df2610b78565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e3882610a92565b9150610e4383610a92565b925082610e5357610e52610dfe565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e7d81610e5e565b8114610e8857600080fd5b50565b600081519050610e9a81610e74565b92915050565b6000819050919050565b610eb381610ea0565b8114610ebe57600080fd5b50565b600081519050610ed081610eaa565b92915050565b600081519050610ee581610ac6565b92915050565b600080600080600060a08688031215610f0757610f06610a22565b5b6000610f1588828901610e8b565b9550506020610f2688828901610ec1565b9450506040610f3788828901610ed6565b9350506060610f4888828901610ed6565b9250506080610f5988828901610e8b565b9150509295509295909350565b6000610f7182610ea0565b9150610f7c83610ea0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fbb57610fba610b78565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ff857610ff7610b78565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561103557611034610b78565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561107257611071610b78565b5b82820290509291505056fea2646970667358221220cbd2ff182ea006521bbdba4364e3d11127b071669acccd63fe4e4a01d211533464736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c806354861af71161004e57806354861af7146100fc5780636b69a59214610139578063b60d428814610164578063dba6335f1461016e5761007b565b80630c967d27146100805780630ec3b0271461008a5780631bf6132d146100b55780633ccfd60b146100f2575b600080fd5b610088610199565b005b34801561009657600080fd5b5061009f6103dd565b6040516100ac9190610a07565b60405180910390f35b3480156100c157600080fd5b506100dc60048036038101906100d79190610a65565b610403565b6040516100e99190610aab565b60405180910390f35b6100fa61041b565b005b34801561010857600080fd5b50610123600480360381019061011e9190610af2565b61065b565b6040516101309190610b2e565b60405180910390f35b34801561014557600080fd5b5061014e61069a565b60405161015b9190610aab565b60405180910390f35b61016c6106a7565b005b34801561017a57600080fd5b506101836107e1565b6040516101909190610b2e565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156102a257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610258575b5050505050905060005b815181101561032c5760008282815181106102ca576102c9610b49565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032490610ba7565b9150506102ac565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035390610c21565b60006040518083038185875af1925050503d8060008114610390576040519150601f19603f3d011682016040523d82523d6000602084013e610395565b606091505b50509050806103d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d090610c93565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561054b576000600182815481106104c6576104c5610b49565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061054390610ba7565b9150506104a3565b50600067ffffffffffffffff81111561056757610566610cb3565b5b6040519080825280602002602001820160405280156105955781602001602082028036833780820191505090505b50600190805190602001906105ab9291906108e1565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105d290610c21565b60006040518083038185875af1925050503d806000811461060f576040519150601f19603f3d011682016040523d82523d6000602084013e610614565b606091505b5050905080610658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064f90610c93565b60405180910390fd5b50565b6001818154811061066b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6802b5e3af16b18800006106e6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461080590919063ffffffff16565b1015610727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071e90610d2e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107759190610d4e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061081183610841565b90506000670de0b6b3a7640000858361082a9190610da4565b6108349190610e2d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561088a57600080fd5b505afa15801561089e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c29190610eeb565b5050509150506402540be400816108d99190610f66565b915050919050565b82805482825590600052602060002090810192821561095a579160200282015b828111156109595782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610901565b5b509050610967919061096b565b5090565b5b8082111561098457600081600090555060010161096c565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109cd6109c86109c384610988565b6109a8565b610988565b9050919050565b60006109df826109b2565b9050919050565b60006109f1826109d4565b9050919050565b610a01816109e6565b82525050565b6000602082019050610a1c60008301846109f8565b92915050565b600080fd5b6000610a3282610988565b9050919050565b610a4281610a27565b8114610a4d57600080fd5b50565b600081359050610a5f81610a39565b92915050565b600060208284031215610a7b57610a7a610a22565b5b6000610a8984828501610a50565b91505092915050565b6000819050919050565b610aa581610a92565b82525050565b6000602082019050610ac06000830184610a9c565b92915050565b610acf81610a92565b8114610ada57600080fd5b50565b600081359050610aec81610ac6565b92915050565b600060208284031215610b0857610b07610a22565b5b6000610b1684828501610add565b91505092915050565b610b2881610a27565b82525050565b6000602082019050610b436000830184610b1f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bb282610a92565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610be557610be4610b78565b5b600182019050919050565b600081905092915050565b50565b6000610c0b600083610bf0565b9150610c1682610bfb565b600082019050919050565b6000610c2c82610bfe565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c7d600b83610c36565b9150610c8882610c47565b602082019050919050565b60006020820190508181036000830152610cac81610c70565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d18601b83610c36565b9150610d2382610ce2565b602082019050919050565b60006020820190508181036000830152610d4781610d0b565b9050919050565b6000610d5982610a92565b9150610d6483610a92565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9957610d98610b78565b5b828201905092915050565b6000610daf82610a92565b9150610dba83610a92565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610df357610df2610b78565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e3882610a92565b9150610e4383610a92565b925082610e5357610e52610dfe565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e7d81610e5e565b8114610e8857600080fd5b50565b600081519050610e9a81610e74565b92915050565b6000819050919050565b610eb381610ea0565b8114610ebe57600080fd5b50565b600081519050610ed081610eaa565b92915050565b600081519050610ee581610ac6565b92915050565b600080600080600060a08688031215610f0757610f06610a22565b5b6000610f1588828901610e8b565b9550506020610f2688828901610ec1565b9450506040610f3788828901610ed6565b9350506060610f4888828901610ed6565b9250506080610f5988828901610e8b565b9150509295509295909350565b6000610f7182610ea0565b9150610f7c83610ea0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fbb57610fba610b78565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ff857610ff7610b78565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561103557611034610b78565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561107257611071610b78565b5b82820290509291505056fea2646970667358221220cbd2ff182ea006521bbdba4364e3d11127b071669acccd63fe4e4a01d211533464736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}